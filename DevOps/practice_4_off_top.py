import time
import winsound


class Sounds:
    def playSound(self):
        def Beep(frequency, duration):
            winsound.Beep(frequency, duration)

        def Sleep(ms):
            time.sleep(ms / 1000)

        Beep(330, 100)
        Sleep(100)
        Beep(330, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(330, 100)
        Sleep(300)
        Beep(392, 100)
        Sleep(700)
        Beep(196, 100)
        Sleep(700)
        Beep(262, 300)
        Sleep(300)
        Beep(196, 300)
        Sleep(300)
        Beep(164, 300)
        Sleep(300)
        Beep(220, 300)
        Sleep(100)
        Beep(246, 100)
        Sleep(300)
        Beep(233, 200)
        Beep(220, 100)
        Sleep(300)
        Beep(196, 100)
        Sleep(150)
        Beep(330, 100)
        Sleep(150)
        Beep(392, 100)
        Sleep(150)
        Beep(440, 100)
        Sleep(300)
        Beep(349, 100)
        Sleep(100)
        Beep(392, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(100)
        Beep(247, 100)
        Sleep(500)
        Beep(262, 300)
        Sleep(300)
        Beep(196, 300)
        Sleep(300)
        Beep(164, 300)
        Sleep(300)
        Beep(220, 300)
        Sleep(100)
        Beep(246, 100)
        Sleep(300)
        Beep(233, 200)
        Beep(220, 100)
        Sleep(300)
        Beep(196, 100)
        Sleep(150)
        Beep(330, 100)
        Sleep(150)
        Beep(392, 100)
        Sleep(150)
        Beep(440, 100)
        Sleep(300)
        Beep(349, 100)
        Sleep(100)
        Beep(392, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(100)
        Beep(247, 100)
        Sleep(900)
        Beep(392, 100)
        Sleep(100)
        Beep(370, 100)
        Sleep(100)
        Beep(349, 100)
        Sleep(100)
        Beep(311, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(207, 100)
        Sleep(100)
        Beep(220, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(300)
        Beep(220, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(500)
        Beep(392, 100)
        Sleep(100)
        Beep(370, 100)
        Sleep(100)
        Beep(349, 100)
        Sleep(100)
        Beep(311, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(523, 100)
        Sleep(300)
        Beep(523, 100)
        Sleep(100)
        Beep(523, 100)
        Sleep(1100)
        Beep(392, 100)
        Sleep(100)
        Beep(370, 100)
        Sleep(100)
        Beep(349, 100)
        Sleep(100)
        Beep(311, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(207, 100)
        Sleep(100)
        Beep(220, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(300)
        Beep(220, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(500)
        Beep(311, 300)
        Sleep(300)
        Beep(296, 300)
        Sleep(300)
        Beep(262, 300)
        Sleep(1300)
        Beep(262, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(300)
        Beep(330, 200)
        Sleep(50)
        Beep(262, 200)
        Sleep(50)
        Beep(220, 200)
        Sleep(50)
        Beep(196, 100)
        Sleep(700)
        Beep(262, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(100)
        Beep(330, 100)
        Sleep(700)
        Beep(440, 100)
        Sleep(300)
        Beep(392, 100)
        Sleep(500)
        Beep(262, 100)
        Sleep(100)
        Beep(262, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(294, 100)
        Sleep(300)
        Beep(330, 200)
        Sleep(50)
        Beep(262, 200)
        Sleep(50)
        Beep(220, 200)
        Sleep(50)
        Beep(196, 100)
        Sleep(700)
        Beep(330, 100)
        Sleep(100)
        Beep(330, 100)
        Sleep(300)
        Beep(330, 100)
        Sleep(300)
        Beep(262, 100)
        Sleep(100)
        Beep(330, 100)
        Sleep(300)
        Beep(392, 100)
        Sleep(700)
        Beep(196, 100)
        Sleep(700)
        Beep(196, 100)
        Sleep(125)
        Beep(262, 100)
        Sleep(125)
        Beep(330, 100)
        Sleep(125)
        Beep(392, 100)
        Sleep(125)
        Beep(523, 100)
        Sleep(125)
        Beep(660, 100)
        Sleep(125)
        Beep(784, 100)
        Sleep(575)
        Beep(660, 100)
        Sleep(575)
        Beep(207, 100)
        Sleep(125)
        Beep(262, 100)
        Sleep(125)
        Beep(311, 100)
        Sleep(125)
        Beep(415, 100)
        Sleep(125)
        Beep(523, 100)
        Sleep(125)
        Beep(622, 100)
        Sleep(125)
        Beep(830, 100)
        Sleep(575)
        Beep(622, 100)
        Sleep(575)
        Beep(233, 100)
        Sleep(125)
        Beep(294, 100)
        Sleep(125)
        Beep(349, 100)
        Sleep(125)
        Beep(466, 100)
        Sleep(125)
        Beep(587, 100)
        Sleep(125)
        Beep(698, 100)
        Sleep(125)
        Beep(932, 100)
        Sleep(575)
        Beep(932, 100)
        Sleep(125)
        Beep(932, 100)
        Sleep(125)
        Beep(932, 100)
        Sleep(125)
        Beep(1046, 675)

    def selfDestruction(self):
        frequency = 2000
        duration = 1000
        winsound.Beep(frequency, duration)
        for i in range(30):
            winsound.Beep(frequency + 60 * i, duration - 30 * i)
        winsound.Beep(2000, 10000)

    def attack(self):
        frequency = 3000
        duration = 500
        winsound.Beep(frequency, duration)


class Unit:
    def __init__(self, name, health):
        self.name = name
        self.health = health
        self.demange = 10
        self.sound = Sounds()
        # self.sound.attack()

    def display(self):
        print(self.__str__)

    def __str__(self):
        return f"Игрок: {self.name} [{self.health}]"

    def attack(self, attackUnit):
        import random

        self.health = self.health - attackUnit.demange - random.randint(-7, 7)
        self.sound.attack()

    def isLive(self):
        if self.health > 0:
            return True
        else:
            print(f"Игрок {self.name} пал в бою")
            self.sound.selfDestruction()


class Boss(Unit):
    def __init__(self, name):
        self.name = name
        self.health = 200
        self.demange = 2
        self.sound = Sounds()

    def __str__(self):
        return f"БОС: {self.name} [{self.health}]"


if __name__ == "__main__":

    sound = Sounds()
    sound.playSound()
    mihalich = Unit("МИХАЛЫЧ", 100)
    kiruha = Unit("ЕВГЕН", 100)
    boss = Boss("ЕГЭ")

    while mihalich.isLive() and kiruha.isLive() and boss.isLive():
        print(mihalich)
        print(boss)
        print(kiruha)

        import random

        r = random.randint(1, 4)
        if r == 1:
            kiruha.attack(boss)
        elif r == 2:
            mihalich.attack(boss)
        elif r == 3:
            boss.attack(mihalich)
        elif r == 4:
            boss.attack(kiruha)
